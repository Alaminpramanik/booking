version: '3'

services:

  redis:
    image: redis:latest
    hostname: redis

  rabbitmq:
    hostname: rabbitmq
    image: rabbitmq:latest
    container_name: booking_rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=booking_superman
      - RABBITMQ_DEFAULT_PASS=booking_superman
    ports:
      - "15672:15672"
      - "5672:5672"
    networks:
      - main

  db:
    image: postgres
    container_name: booking_postgres
    environment:
      POSTGRES_USER: booking_gang
      POSTGRES_DB: booking_gang
      POSTGRES_PASSWORD: booking_star
    volumes:
      - pgdata:/var/lib/posgresql/data
    networks:
      - main

  web:
    build: .
    # dockerfile: ./docker/backend/Dockerfile
    container_name: booking_web
    command: bash -c "python manage.py makemigrations && python manage.py migrate && python manage.py runserver 0.0.0.0:8080"
    volumes:
      - .:/app
    ports:
      - "8080:8080"
    depends_on:
      - db
      - redis
      - rabbitmq
    hostname: web
    
    networks:
      - main

  celery_worker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: booking_celery_worker
    command: bash -c "celery -A booking worker --loglevel=info"
    volumes:
      - .:/app
    depends_on:
      - web
      - db
      - rabbitmq
    hostname: celery_worker
    links:
      - rabbitmq
      - redis
    networks:
      - main
  celery_beat:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: booking_celery_beat
    command: bash -c "celery -A booking beat --loglevel=info"
    volumes:
      - .:/app
    depends_on:
      - web
      - db
      - redis
      - rabbitmq
    hostname: celery_beat
    links:
      - rabbitmq
      - redis

networks:
  main:

volumes:
  pgdata:
